{{-- @extends('layouts.main')

@section('content')
<div class="flex flex-col w-full max-h-full">
    <div class="flex justify-between items-center">
        <div class="flex">
            <p class="font-semibold align-baseline text-2xl">
                {{ $room->room }}
            </p>
            <p class="font-normal text-md ml-4 mt-1.5"> ชั้น </p>
            <p class="font-bold ml-1 mt-1.5"> {{ $room->floor }}</p>
            <p class="font-normal text- justify-start ml-4 mt-1.5"> ที่นั่งว่าง </p>
            <p id="validSeatCount" class="font-bold ml-1 mt-1.5 text-green-800"> {{ $room->valid_seat }}</p>
            <p class="font-normal text- justify-start ml-4 mt-1.5"> ที่นั่งทั้งหมด </p>
            <p id="totalSeatCount" class="font-bold ml-1 mt-1.5"> {{ $room->total_seat }}</p>
            <p class="font-normal text- justify-start ml-4 mt-1.5"> แถว </p>
            <p id="row-count" class="font-bold ml-1 mt-1.5 text-black"> {{ $room->rows }}</p>
            <p class="font-normal text- justify-start ml-4 mt-1.5"> คอลัมน์ </p>
            <p id="column-count" class="font-bold ml-1 mt-1.5 text-black"> {{ $room->columns }}</p>
        </div>
        <div class="flex"> </div>
    </div>
    <div class="bg-white shadow-md my-3 rounded-lg max-h-screen flex flex-col">
        <div id="seat-container" class="grid gap-2 overflow-x-auto overflow-y-auto w-full h-96">
            <!-- Seats will be generated by JavaScript -->
        </div>
    </div>
    <div class="bg-white shadow-md my-3 rounded-lg max-h-screen flex flex-col p-4">
        <h2 class="text-xl font-semibold mb-4">Applicants</h2>
        @if($applicants->isEmpty())
            <p>No applicants assigned to this room.</p>
        @else
            <ul>
                @foreach($applicants as $applicant)
                    <li>{{ $applicant->id_number }}</li>
                @endforeach
            </ul>
        @endif
    </div>
</div>

<script>
let validSeatCount = {{ $room->valid_seat }};
const applicants = {!! json_encode($applicants) !!};

console.log('Applicants:', applicants);

function toExcelColumn(n) {
    let result = '';
    while (n >= 0) {
        result = String.fromCharCode((n % 26) + 65) + result;
        n = Math.floor(n / 26) - 1;
    }
    return result;
}

function addSeats() {
    const rows = parseInt(document.getElementById('row-count').textContent);
    const columns = parseInt(document.getElementById('column-count').textContent);
    const seatContainer = document.getElementById('seat-container');
    seatContainer.innerHTML = '';
    seatContainer.style.gridTemplateColumns = `repeat(${columns}, minmax(4rem, 1fr))`;

    let seatComponents = '';
    for (let i = 0; i < rows; i++) {
        for (let j = 0; j < columns; j++) {
            const seatId = `${i + 1}-${toExcelColumn(j)}`;
            let seatComponent = '';
            const applicant = applicants.find(app => app.row == i + 1 && app.column == j + 1);
            console.log(`Seat ID: ${seatId}, Applicant: `, applicant);

            if (applicant) {
                seatComponent = `
                    <div id="seat-${seatId}" class="seat p-4 text-center cursor-pointer">
                        <div class="seat">
                            <button class="group relative w-max rounded-lg mb-1 flex flex-col items-center justify-center text-sm transition-all duration-500 hover:fill-gray-700 hover:text-gray-700 hover:font-semibold hover:scale-110 fill-gray-600 opacity-50 text-gray-600 hover:opacity-100">
                                <p>${seatId}</p>
                                <svg xmlns="http://www.w3.org/2000/svg" class="w-10 h-10 " id="Layer_1" data-name="Layer 1" viewBox="0 0 24 24" width="512" height="512">
                                    <path d="M23,11c0-2.206-1.794-4-4-4v-2c0-2.757-2.243-5-5-5h-4c-2.757,0-5,2.243-5,5v2c-2.206,0-4,1.794-4,4v5c0,.017,0,.035,.001,.052,.028,1.63,1.362,2.948,2.999,2.948h7v3H7c-.552,0-1,.447-1,1s.448,1,1,1h10c.552,0,1-.447,1-1s-.448-1-1-1h-4v-3h7c1.637,0,2.971-1.318,2.999-2.948,0-.017,.001-.034,.001-.052v-5Zm-2,0v2.172c-.313-.111-.649-.172-1-.172h-1v-4c1.103,0,2,.897,2,2ZM7,5c0-1.654,1.346-3,3-3h4c1.654,0,3,1.346,3,3V13H7V5Zm-2,4v4h-1c-.351,0-.687,.061-1,.172v-2.172c0-1.103,.897-2,2-2Zm15,8H4c-.551,0-1-.448-1-1s.449-1,1-1H20c.551,0,1,.448,1,1s-.449,1-1,1Z"/>
                                </svg>
                                <p class="absolute text-xs translate-y-3 text-white bg-green-500 rounded p-1 whitespace-nowrap">${applicant.id_number}</p>
                            </button>
                        </div>
                    </div>
                `;
            } else {
                seatComponent = `
                    <div id="seat-${seatId}" class="seat p-4 text-center cursor-pointer">
                        <x-seats.primary>
                            ${seatId}
                        </x-seats.primary>
                    </div>
                `;
            }
            seatComponents += seatComponent;
        }
    }
    seatContainer.innerHTML = seatComponents;
}

document.addEventListener('DOMContentLoaded', addSeats);
</script>

@endsection --}}

@extends('layouts.main')

@section('content')
<div class="flex flex-col w-full max-h-full">
    <div class="flex justify-between items-center">
        <div class="flex">
            <p class="font-semibold align-baseline text-2xl">
                {{ $room->room }}
            </p>
            <p class="font-normal text-md ml-4 mt-1.5"> ชั้น </p>
            <p class="font-bold ml-1 mt-1.5"> {{ $room->floor }}</p>
            <p class="font-normal text- justify-start ml-4 mt-1.5"> ที่นั่งว่าง </p>
            <p id="validSeatCount" class="font-bold ml-1 mt-1.5 text-green-800"> {{ $room->valid_seat }}</p>
            <p class="font-normal text- justify-start ml-4 mt-1.5"> ที่นั่งทั้งหมด </p>
            <p id="totalSeatCount" class="font-bold ml-1 mt-1.5"> {{ $room->total_seat }}</p>
            <p class="font-normal text- justify-start ml-4 mt-1.5"> แถว </p>
            <p id="row-count" class="font-bold ml-1 mt-1.5 text-black"> {{ $room->rows }}</p>
            <p class="font-normal text- justify-start ml-4 mt-1.5"> คอลัมน์ </p>
            <p id="column-count" class="font-bold ml-1 mt-1.5 text-black"> {{ $room->columns }}</p>
        </div>
        <div class="flex"> </div>
    </div>
    <div class="bg-white shadow-md my-3 rounded-lg max-h-screen flex flex-col">
        <div id="seat-container" class="grid gap-2 overflow-x-auto overflow-y-auto w-full h-96">
            <!-- Seats will be generated by JavaScript -->
        </div>
    </div>
    <div class="bg-white shadow-md my-3 rounded-lg max-h-screen flex flex-col p-4">
        <h2 class="text-xl font-semibold mb-4">Applicants</h2>
        @if($applicants->isEmpty())
            <p>No applicants assigned to this room.</p>
        @else
            <ul>
                @foreach($applicants as $applicant)
                    <li>{{ $applicant->id_number }}</li>
                @endforeach
            </ul>
        @endif
    </div>
</div>

<script>
let validSeatCount = {{ $room->valid_seat }};
const applicants = {!! json_encode($applicants) !!};
const selectedSeats = JSON.parse(@json($room->selected_seats) || "[]");

console.log('Applicants:', applicants);
console.log('Selected Seats:', selectedSeats);

function toExcelColumn(n) {
    let result = '';
    while (n >= 0) {
        result = String.fromCharCode((n % 26) + 65) + result;
        n = Math.floor(n / 26) - 1;
    }
    return result;
}

function addSeats() {
    const rows = parseInt(document.getElementById('row-count').textContent);
    const columns = parseInt(document.getElementById('column-count').textContent);
    const seatContainer = document.getElementById('seat-container');
    seatContainer.innerHTML = '';
    seatContainer.style.gridTemplateColumns = `repeat(${columns}, minmax(4rem, 1fr))`;

    let seatComponents = '';
    let applicantIndex = 0;

    for (let i = 0; i < rows; i++) {
        for (let j = 0; j < columns; j++) {
            const seatId = `${i + 1}-${toExcelColumn(j)}`;
            let seatComponent = '';
            const isDeactivated = selectedSeats.includes(seatId);

            if (isDeactivated) {
                seatComponent = `
                    <div id="seat-${seatId}" class="seat p-4 text-center cursor-pointer">
                        <x-seats.unavailable>
                            ${seatId}
                        </x-seats.unavailable>
                    </div>
                `;
            } else {
                const applicant = applicants[applicantIndex];
                if (applicant) {
                    seatComponent = `
                        <div id="seat-${seatId}" class="seat p-4 text-center cursor-pointer">
                            <x-seats.assigned applicant="${applicant.id_number}">
                                ${seatId}
                            </x-seats.assigned>
                        </div>
                    `;
                    applicantIndex++;
                } else {
                    seatComponent = `
                        <div id="seat-${seatId}" class="seat p-4 text-center cursor-pointer">
                            <x-seats.primary>
                                ${seatId}
                            </x-seats.primary>
                        </div>
                    `;
                }
            }
            seatComponents += seatComponent;
        }
    }
    seatContainer.innerHTML = seatComponents;
}

document.addEventListener('DOMContentLoaded', addSeats);
</script>

@endsection







